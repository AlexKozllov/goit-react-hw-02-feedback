{"version":3,"sources":["components/feedbackOptions/FeedbackOptions .js","components/notification/Notification.js","components/section/Section.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","item","name","type","onClick","Notification","message","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","App","state","getOptions","console","log","Object","keys","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAYeA,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAClB,OACE,wBAAmBC,KAAMD,EAAME,KAAK,SAASC,QAASL,EAAtD,SACGE,GADUA,OCAJI,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCSEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCQQC,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCqDSC,G,kNAtDbC,MAAQ,CAAEN,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCK,WAAa,WAEX,OADAC,QAAQC,IAAIC,OAAOC,KAAK,EAAKL,QACtBI,OAAOC,KAAK,EAAKL,Q,EAG1BlB,gBAAkB,SAACwB,GACjB,IAAMrB,EAAOqB,EAAEC,OAAOtB,KACtB,EAAKuB,UAAS,SAACC,GACb,OAAO,eAAGxB,EAAOwB,EAAUxB,GAAQ,O,EAIvCyB,mBAAqB,WAAO,IAAD,EACM,EAAKV,MACpC,OAFyB,EACjBN,KADiB,EACXC,QADW,EACFC,K,EAIzBe,gCAAkC,WAAO,IAC/BjB,EAAS,EAAKM,MAAdN,KACR,OAAO,EAAKgB,qBACRE,KAAKC,MAAc,IAAPnB,EAAc,EAAKgB,sBAC/B,G,uDAIJ,OACE,qCACE,cAAC,EAAD,CAASnB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEV,QAASiC,KAAKb,aACdnB,gBAAiBgC,KAAKhC,oBAI1B,cAAC,EAAD,CAASS,MAAO,aAAhB,SACKuB,KAAKJ,qBACN,cAAC,EAAD,CACEhB,KAAMoB,KAAKd,MAAMN,KACjBC,QAASmB,KAAKd,MAAML,QACpBC,IAAKkB,KAAKd,MAAMJ,IAChBC,MAAOiB,KAAKJ,qBACZZ,mBAAoBgB,KAAKH,oCAG3B,cAAC,EAAD,CAActB,QAAQ,+B,GA/ChB0B,c,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d6f25cd8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((item) => {\r\n    return (\r\n      <button key={item} name={item} type=\"button\" onClick={onLeaveFeedback}>\r\n        {item}\r\n      </button>\r\n    );\r\n  });\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive Feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions \";\r\nimport Notification from \"./notification/Notification\";\r\nimport Section from \"./section/Section\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  getOptions = () => {\r\n    console.log(Object.keys(this.state));\r\n    return Object.keys(this.state);\r\n  };\r\n\r\n  onLeaveFeedback = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((prevState) => {\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    return this.countTotalFeedback()\r\n      ? Math.round((good * 100) / this.countTotalFeedback())\r\n      : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            options={this.getOptions()}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        <Section title={\"Statistics\"}>\r\n          {!!this.countTotalFeedback() ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}